{"name":"uSched","tagline":"A command-line scheduler with an almost-natural language interpreter.","body":"## Summary \r\n\r\nA command-line scheduler with an almost-natural language interpreter.\r\nIt also delivers a powerful programming interface for multiple programming languages.\r\n\r\n\r\n\r\n## Description\r\n\r\nuSched services provide an interface to schedule commands to be executed at a particular time, optionally repeating them over a specificied interval, and optionally stopping them at any other particular time.\r\n\r\nIt provides a simple and intuitive structured language that is intepreted via a command line client, but can also be integrated into any programming language through its client libraries and bindings.\r\n\r\nIt also operates as a client/server, where requests performed by clients can affect local or remote machines where uSched services are running.\r\n\r\n\r\n\r\n## Portability\r\n\r\nuSched is designed to be compliant with any POSIX operating system. There are some features that may not be enabled by default in the case that some non-portable calls being unavailable for the target operating system, such as chroot(). To disable such calls and features, set the CONFIG_POSIX_STRICT definition to 1 in the include/config.h file.\r\n\r\nuSched client will compile on most Windows versions and the API bindings are available for C#.\r\n\r\n\r\n\r\n## Installation\r\n\r\nPerform the following commands:\r\n\r\n      ~# cd /usr/src\r\n      ~# mkdir usched\r\n      ~# wget https://github.com/ucodev/usched/archive/master.tar.gz\r\n      ~# tar zxvf master.tar.gz -C usched\r\n      ~# cd usched\r\n      ~# ./deploy\r\n\r\nor\r\n\r\n      See INSTALL.txt\r\n\r\n\r\n\r\n## Command-Line Usage Examples\r\n\r\nRun the do_backups.sh script at 23:00 and then run it every 24 hours:\r\n\r\n      ~$ usc run '/usr/local/bin/do_backups.sh' on hour 23 then every 24 hours\r\n\r\n\r\nDump 'df -h' output into /tmp/disk_stats.log after 10 minutes of running this command, and run it again every 30 minutes:\r\n\r\n      ~$ usc run '/bin/df -h >> /tmp/disk_stats.log' in 10 minutes then every 30 minutes\r\n\r\n\r\nRun the command 'sync' now, repeat every 45 seconds and stop when the time is 12:00:\r\n\r\n      ~$ usc run '/bin/sync' now then every 45 seconds until to time '12:00:00'\r\n\r\n\r\nShow all scheduled entries for the user by running the following command:\r\n\r\n      ~$ usc show all\r\n\r\n\r\nStop all scheduled entries for the user by running the following command:\r\n\r\n      ~$ usc stop all\r\n\r\n\r\n\r\n## Documentation\r\n\r\nReference Manual in HTML format:\r\n\r\n  * [http://www.usched.org/doc/uSched_Reference_Manual.html](http://www.usched.org/doc/uSched_Reference_Manual.html)\r\n\r\nReference Manual in PDF format:\r\n\r\n  * [http://www.usched.org/doc/uSched_Reference_Manual.pdf](http://www.usched.org/doc/uSched_Reference_Manual.pdf)\r\n\r\nOverview manual page:\r\n\r\n      usched(7)\r\n\r\nCommand-line manual pages:\r\n\r\n      usched(1), usa(1), usc(1), usd(1), use(1), usm(1)\r\n\r\nProgrammer's manual pages:\r\n\r\n      usched_destroy(3), usched_init(3),\r\n      usched_opt_set_remote_hostname(3), usched_opt_set_remote_port(3)\r\n      usched_opt_set_remote_username(3), usched_opt_set_remote_password(3),\r\n      usched_request(3),\r\n      usched_result_free_run(3),\r\n      usched_result_free_show(3),\r\n      usched_result_free_stop(3),\r\n      usched_result_get_run(3),\r\n      usched_result_get_show(3),\r\n      usched_result_get_stop(3),\r\n      usched_usage_error(3), usched_usage_error_str(3)\r\n\r\nGenerate Doxygen HTML files (into doc/doxygen/doxyfiles/):\r\n\r\n      $ make doxygen\r\n\r\nBrief installation guide:\r\n\r\n      INSTALL.txt\r\n\r\n\r\n\r\n## Library Usage Examples\r\n\r\nSee example/ directory for library usage examples in C, C#, Java, PHP, and more.\r\n\r\n\r\n\r\n## Notes\r\n\r\nThe current project revision is on an **alpha stage** and shall not be used beyond testing purposes.\r\n\r\n","google":"UA-60868614-1","note":"Don't delete this file! It's used internally to help with page regeneration."}